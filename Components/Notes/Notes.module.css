@import url('https://fonts.googleapis.com/css?lang=en&family=Product+Sans|Roboto:400,700');
@import url('https://fonts.googleapis.com/css?family=Google+Sans:400,500&subset=cyrillic,cyrillic-ext,greek,greek-ext,latin,latin-ext,vietnamese');

.cardContainer {
  width                              : 100%;
  /* width                           : 100vw;
  max-width                          : var(--max-width); */
  text-align                         : left;
  margin                             : 0 auto;
  position                           : relative;
  transition                         : all .3s ease-in-out, margin .2s ease-in-out, padding .2s ease-in-out;
  /* overflow                        : hidden; */
  display                            : flex;
  justify-content                    : center;
  flex-wrap                          : wrap;
  gap                                : 10px;
  text-align                         : left;
  /* margin-top                      : 65px; */
  padding                            : 1.3rem 0.9rem;
  /* padding-top                     : 0; */
  /* padding-top                     : 7px;
  padding-top                        : 20px; */
  /* margin-top                      : calc(75px + 45px); */
}

.selectAll {
  display               : block;
  background-color      : transparent;
  color                 : var(--text-black);
  border                : 0;
  transition            : margin .2s ease-in-out;
  text-align            : right;
  padding               : 0.5rem 0.9rem;
  position              : fixed;
  z-index               : 1000;
  /* background         : white; */
  background-color      : var(--light-card);
  /* border-bottom      : .5px solid var(--border-light); */
  max-width             : var(--max-width);
  width                 : 100vw;
  outline               : 0;
}

.selectAll:focus-visible {
  outline: 0;
}

.card {
  flex-grow       : 1;
  opacity         : 1;
  width           : 35%;
  border-radius   : 13px;
  padding         : .5rem;
  overflow        : hidden;
  color           : inherit;
  cursor          : pointer;
  white-space     : pre-wrap;
  word-break      : break-word;
  background-color: var(--light-card);
  border          : 1px solid var(--card-border);
  transition      : all .2s ease-in-out, background-color 0s;
}

@media (hover: hover) and (pointer: fine) {
  .card .header button:not(.uncheck, .check) {
    opacity: 0;
  }
  .card:is(.selected) button {
    opacity: 1;
  }
  .card:hover .header button {
    opacity: 1;
  }
}

.card.selected {
  outline      : 2px solid var(--bright-green);
  border-radius: 141px 10% 25% 10px;
}

.card:focus-visible {
  outline       : 2px solid var(--main-color) !important;
  outline-offset: 2px;
}

.card.active {
  opacity: 0;
}

.positioned {
  /* opacity         : 0; */
  /* top          : 0; */
  /* left         : 0; */
}

.cardTitle {
  display       : flex;
  flex          : 1;
  border-bottom : 1px solid rgba(0, 0, 0, 0.1);
  padding-bottom: 14px;
  margin-bottom : 10px;
  font-weight   : 500;
  font-family   : "Google Sans", Roboto, Arial, sans-serif;
}

.card p:not(.date) {
  -webkit-line-clamp: 6;
  overflow          : hidden;
  display           : -webkit-box;
  -webkit-box-orient: vertical;
  text-overflow     : ellipsis;
  font-family       : Roboto, Arial, sans-serif;
  color             : var(--text-secondary);
  font-size         : 19px;
}

.header>button {
  width           : 25px;
  height          : 25px;
  display         : flex;
  justify-content : center;
  align-items     : center;
  border          : 0;
  border-radius   : 100px;
  padding         : 3px;
  background-color: transparent;
}

.header>button:not(.check) {
  color: var(--text-black);

}

.header>button:hover {
  background-color: var(--light-btn-hover);
}

.header>button:active {
  background-color: var(--light-btn-active);
  opacity         : .5;
}

.uncheck {
  background-color   : transparent;
  scale              : 1.3;
  color              : rgb(202, 202, 202);
  color              : rgb(187, 187, 187);
  /* opacity         : 1; */
}

.check {
  color           : var(--bright-green);
  background-color: rgb(59, 223, 59);
  background-color: rgb(97, 245, 97);
}

.viewContainer {
  display         : flex;
  flex-direction  : column;
  text-align      : left;
  background-color: var(--light-card);
  color           : var(--text-black);
  max-width       : var(--max-width);
  width           : 100vw;
  min-height      : -webkit-fill-available;
  margin          : 0 auto;
  transform       : translateX(var(--max-width));
  transition      : all .4s ease-in-out, width 0s;
  z-index         : 100000;
  opacity         : 0;
  visibility      : hidden;
  pointer-events  : initial;
  margin          : 0 auto;
}

.viewContainer.loading {
  pointer-events: none;
}

.viewContainer.active {
  transform : translateX(0px);
  opacity   : 1;
  visibility: visible;
}

.textarea {
  overflow: hidden;
  resize  : none;
}

.titleView:focus,
.textView:focus {
  outline: none;
}

.titleSpan,
.textSpan {
  position      : absolute;
  user-select   : none;
  pointer-events: none;
}

.header {
  display: flex;
  gap    : 10px;
}

.action {
  z-index         : 100;
  position        : absolute;
  display         : flex;
  flex-direction  : column;
  gap             : 6px;
  width           : 40%;
  transform-origin: top;
}

.action>button {
  padding         : 8px;
  background-color: white;
  font-size       : 1rem;
  border          : 0;
  border-radius   : 10px;
  box-shadow      : 0 0 8px 1px rgb(159 159 159 / 32%);
  transition      : all .19s ease-in-out;
}

.action>button:hover {
  padding         : 8px;
  background-color: rgb(221, 221, 221);
}

.action>button:active {
  background-color: rgb(91 231 145);
  scale           : .9;
}

.action>button {
  display    : flex;
  gap        : 5px;
  align-items: center;
  width      : 100%;
}

.deletBtn {
  background-color: red !important;
  background-color: red !important;
  color           : white;
}

.deletBtn:hover {
  background-color: rgb(255, 77, 77) !important;
}

.deletBtn:is(:active, :disabled) {
  background-color: rgb(255, 127, 127) !important;
  opacity         : 1 !important;
}

.titleSpan {
  font-size: 1.3em;
}

.viewHeader {
  padding        : 0 1.3rem;
  height         : 70px;
  display        : flex;
  align-items    : center;
  justify-content: space-between;
  border-bottom  : 2px solid var(--border-light);
}

.backBtn {
  cursor          : pointer;
  display         : flex;
  align-items     : center;
  width           : 30px;
  height          : 30px;
  background-color: red;
  scale           : 1.5;
  color           : var(--text-black);
}

.submitBtn {
  cursor     : pointer;
  display    : flex;
  align-items: center;
  width      : 30px;
  scale      : 1.5;
  color      : #232323;
}

.backBtn>svg {
  flex: 1;
}

.viewContent {
  overflow: auto !important;
  padding : 25px 1.3rem;
  height  : calc(100% - 70px);
  position: relative;
}

.viewContent>h3 {
  font-weight  : 500;
  margin-bottom: 0.7rem;
  outline      : none;
}

.edit {
  position      : fixed;
  overflow      : hidden;
  width         : 100vw;
  max-width     : var(--max-width);
  height        : 100%;
  z-index       : 100000;
  cursor        : default;
  pointer-events: none;
}

.edit.active {
  pointer-events: auto;
}

.edit.loading {
  cursor: wait;
}

.date {
  color: var(--date-text);
  font-family: Roboto,
    Arial,
    sans-serif;
  font-size: 16px;
  margin   : .5rem 0;
}

.editDate {
  padding  : 10px 1.3rem;
  font-size: 16px;

  font-family: Roboto,
    Arial,
    sans-serif;
  animation      : fadeIn .2s .5s forwards ease-in-out;
  opacity        : 0;
  display        : flex;
  justify-content: center;
  align-items    : center;
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}